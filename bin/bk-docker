#!/usr/bin/env -S pkgx +docker bash -eo pipefail

if [ "$1" == --help ]; then
  echo 'enables building linux on darwin' >&2
  echo 'builds are persisted to your pantry checkout' >&2
  echo >&2
  echo 'bk docker                 interactive tty of your pantry checkout' >&2
  echo 'bk docker build           same as `bk build` but in linux' >&2
  echo 'bk docker --x86-64 build  builds for PLATFORM' >&2
  exit 0
fi

if [ -n "$VERBOSE" ]; then
  set -x
fi

if [ ! -d "$PKGX_PANTRY_PATH" ]; then
  echo "error: \`brewkit docker\` can only be run from a pantry checkout" >&2
  exit 64
fi

d="$(cd "$(dirname "$0")/.." && pwd)"

if [ -z "$GITHUB_TOKEN" ]; then
  GITHUB_TOKEN=$(pkgx gh auth token)
  export GITHUB_TOKEN
fi

if [ "$1" = --pull ]; then
  docker image pull pkgxdev/pkgx
  shift
fi

case "$1" in
--x86-64|--amd64)
  PLATFORM=linux/amd64
  shift;;
--aarch64|--arm64)
  PLATFORM=linux/arm64
  shift;;
*)
  case "$(uname -m)" in
  x86_64)
    PLATFORM=linux/amd64;;
  aarch64|arm64)
    PLATFORM=linux/arm64;;
  esac;;
esac

if [ -z "$1" ]; then
  INTERACTIVE="-it"
  CMD="/bin/bash"
else
  CMD="/brewkit/bin/bk $1"
  shift
fi

SPECIFIER="${PLATFORM//\//-}"
VOLUME_NAME="brewkit.pkgx.dev.${SPECIFIER:-unknown}"

PLATFORM="${PLATFORM:+--platform $PLATFORM}"

# Create volume if it doesn't exist
if [ -z "$(docker volume ls -q -f name=^${VOLUME_NAME}$)" ]; then
  set -x
  docker volume create ${VOLUME_NAME} >/dev/null
else
  set -x
fi

exec docker run \
  --name brewkit.pkgx.dev \
  --rm \
  $INTERACTIVE $PLATFORM \
  --volume "$d:/brewkit" \
  --volume "$PKGX_PANTRY_PATH:/work" \
  --volume "${XDG_CACHE_HOME:-$HOME/Library/Caches/pkgx}:/root/.cache/pkgx" \
  --volume "$VOLUME_NAME:/root/.pkgx" \
  --env DENO_DIR=/root/.pkgx/.cache/deno \
  --env PKGX_PANTRY_PATH=/work \
  --env GITHUB_TOKEN \
  --env CLICOLOR_FORCE=1 \
  --workdir /work \
  pkgxdev/pkgx \
  $CMD "$@"
