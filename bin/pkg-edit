#!/bin/sh

set -e

d="$(cd "$(dirname "$0")"/.. && pwd)"
PATH="$d/libexec:$PATH"

if test -z "$1"; then
  if test -z "$TEA_PANTRY_PATH"; then
    echo "error: TEA_PANTRY_PATH is not set" >&2
    exit 1
  fi
  for x in $(echo "$TEA_PANTRY_PATH" | tr ':' '\n'); do
    if test -z "$PKGS" -a -d "$x"/.git; then
      #^^^^^^^^^^^^^^^ stop at first match
      PKGS="$(GIT_DIR="$x"/.git peek.sh --print-paths)"
    fi
  done
else
  for x in $(echo "$TEA_PANTRY_PATH" | tr ':' '\n'); do
    if test -f "$x/projects/$1/package.yml"; then
      PKGS="$x/projects/$1/package.yml $PKGS"
    fi
  done
  if test -z "$PKGS"; then
    echo "error: \`$1\` not found in \`\$TEA_PANTRY_PATH\`" >&2
    exit 1
  fi
fi

if test -z "$EDITOR"; then
  if command -v code 2>/dev/null; then
    EDITOR="code"
  elif command -v vim 2>/dev/null; then
    EDITOR="vim"
  elif command -v vi 2>/dev/null; then
    EDITOR="vi"
  elif command -v emacs 2>/dev/null; then
    EDITOR="emacs"
  else
    echo "error: \`\$EDITOR\` is not set" >&2
    exit 1
  fi
elif test "$EDITOR" = code_wait; then
  # this is for mxcl who generally prefers his editor to wait
  # but not in this case. #perks-of-making-the-thing
  EDITOR="code"
fi

if test -z "$PKGS"; then
  echo "error: no new packages in \`\$TEA_PANTRY_PATH\`" >&2
  exit 1
else
  # We intend to split on spaces, so disable the shellcheck warning.
  # shellcheck disable=2086
  exec $EDITOR $PKGS
fi
