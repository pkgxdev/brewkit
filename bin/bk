#!/usr/bin/env -S bash -eo pipefail

d="$(cd "$(dirname "$0")" && pwd)"

if [ -z "$1" ] || [ "$1" = '--help' ] || [ "$1" = '-h' ]; then
  echo usage: >&2
  echo "  $0 <command> [args]" >&2
  echo >&2
  echo available commands: >&2
  for x in $(ls "$d"/cmd); do
    echo "  $x" >&2
  done
  echo >&2
  echo • some commands provide \`--help\` >&2
  echo • "you can (unambiguously) shorten commands, eg. \`bk b\`"
  echo • https://github.com/pkgxdev/brewkit
  if [ -z "$1" ]; then
    exit 64
  else
    exit 0
  fi
fi

arg="$1"
shift

if test "$arg" = "-v" || test "$arg" = "--version"; then
  d="$(cd "$(dirname "$0")"/.. && pwd)"
  if echo "$d" | grep -q "${PKGX_DIR:-$HOME/.pkgx}/pkgx.sh/brewkit"; then
    V="${d#"${PKGX_DIR:-$HOME/.pkgx}"/pkgx.sh/brewkit/}"
  else
    V="$(git describe --tags --abbrev=0 --match "v[0-9]*.[0-9]*.[0-9]*")-dev"
  fi
  echo "brewkit $V"
  exit 0
fi

if test -x "$d/bk-$arg"; then
  exec "$d/bk-$arg" "$@"
elif test "$(find "$d" -name "bk-$arg*" | wc -l)" -eq 1; then
  exec "$d/bk-$arg"* "$@"
else
  echo "error: unknown or ambiguous command \`$arg\`, available commands:" >&2
  echo >&2
  for x in $(cd "$d" && ls | grep '^bk-'); do
    echo $x | sed 's/^bk-//' >&2
  done
  exit 64
fi
