#!/bin/sh

set -e

d="$(cd "$(dirname "$0")"/.. && pwd)"
PATH="$d/libexec:$PATH"

if test -z "$1"; then
  if test -z "$TEA_PANTRY_PATH"; then
    echo "error: TEA_PANTRY_PATH is not set" >&2
    exit 1
  fi
  for x in $(echo "$TEA_PANTRY_PATH" | tr ':' '\n'); do
    if test -d "$x"/.git; then
      PKGS="$(GIT_WORK_TREE="$x" peek.sh) $PKGS"
    fi
  done
else
  PKGS="$1"
fi

if test -n "$TEA_DOCKER"; then
  exec "$d"/bin/pkg-docker test "$PKGS"
fi

if ! available.ts "$@"; then
  echo "warning: not supported on current platform" >&2
  exit 0
fi

gum() {
  tea gum format -- "$@"
}

for PKG in $PKGS; do
  gum "# testing $PKG"
  gum "## preparing testbed"

  PKG="$(resolve.ts "$PKG" --cellar)"
  DEPS="$(deps.ts "$PKG" --test)"
  # shellcheck disable=2086
  DEPS="$(install.ts $DEPS)"
  DSTDIR="$(query.ts "$PKG" --testdir)"

  if test -d "$DSTDIR"; then
    for x in "$DSTDIR"/*; do
      if test $x != "$DSTDIR"/.cargo; then
        rm -rf "$x"
      fi
    done
  fi
  mkdir -p "$DSTDIR"

  stage-test.ts "$PKG" --deps "$DEPS" --dstdir "$DSTDIR"

  if command -v bash >/dev/null; then
    BASH=bash
  else
    BASH="tea bash"
  fi

  gum "## running test"

  env -i "$BASH" --noprofile --norc -e "$DSTDIR"/xyz.tea.test.sh

  gum "## running audit"

  audit.ts "$PKG"
done
