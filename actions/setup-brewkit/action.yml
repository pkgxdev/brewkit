name: pkgx/brewkit/setup
description: sets up pkgx, brewkit & caching

inputs:
  prefix:
    description: >
      Where pkgx stows its packages.
      Defaults to `$HOME/.pkgx`.
    required: false
  version:
    description: >
      The version of pkgx to install.
      Defaults to `latest`.
    required: false
  pkgs:
    description: additional pkgs
    required: false
outputs:
  PKGX_DIR:
    description: See PKGX_DIR in our docs.
    value: ${{ steps.foo.outputs.prefix }}

runs:
  using: composite
  steps:
    - uses: pkgxdev/setup@v1
      id: pkgx
      with:
        PKGX_DIR: ${{ inputs.prefix }}
        version: ${{ inputs.version }}
        +: ${{inputs.pkgs }}

    - name: install brewkit
      # If v0 is not a symlink, then brewkit cannot
      # build itself. This is a workaround for
      # https://github.com/pkgxdev/libpkgx/pull/46
      run: |
        d="${PKGX_DIR:-$HOME/.pkgx}/pkgx.sh/brewkit"
        mkdir -p "$d"
        cp -R $GITHUB_ACTION_PATH/../.. "$d/gha-temp"
        ln -s gha-temp "$d/v0"
        echo "$d/v0/bin" >> $GITHUB_PATH
      shell: bash

    - uses: pkgxdev/brewkit/actions/cache@v0
      with:
        cache-name: setup

    # $GITHUB_WORKSPACE is correct when using a container
    # ${{ github.workspace }} is the runner
    - run: |
        if test -d "$GITHUB_WORKSPACE"/projects; then
          echo "PKGX_PANTRY_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
        fi
      shell: bash

    - run: echo "PKGX_DIR=${PKGX_DIR:-$HOME/.pkgx}" >> $GITHUB_OUTPUT
      id: foo
      shell: bash
