# this is a basic template for packages we strongly recommend looking at the
# contents of both:
#
# * https://github.com/teaxyz/pantry.core
# * https://github.com/teaxyz/pantry.extra
#
# as a learning guide and reference. For example, if you are package a `go`
# project, then browse the listings and find a go package.


# this is the source tarball. Swap the version out for {{version}} or we won’t
# be able to upgrade the package when it updates!
distributable:
   url: https://example.com/v{{version}}.tar.gz
   # this obscure option dictates how many components are removed from the
   # extracted tarball. It only works with tarballs. You almost always want
   # `1`. If after extraction the src-directory is funky try `0` or `2`.
   strip-components: 1

# if there’s a github then we can parse the versions
versions:
  # if the repo has a github then we can parse versions
  # this should be one of these (remove the rest or the YAML won’t parse)
  github: user/repo  # reads github release *names*
  github: user/repo/tags  # reads github tags from github
  github: user/repo/releases/tags  # reads github *releases* but uses the tags of those releases
  # ^^ REMOVE ALL BUT ONE!

  # often maintainers prepend or append junk, this can be an array of regexes
  strip: /^v/

dependencies:
  # to figure out dependencies you can read the project’s README
  # however it is often easier to read the [brew formula](https://formulae.brew.sh/formula/)
  #
  # see tea.xyz/+/ for the packages tea provides
  # if you need a package that isn’t there, you may need to build it!
  # we can help you: https://discord.tea.xyz
  #
  # see semver.org for version specifications
  foo.com: ^1.2.3

build:
  dependencies:
    tea.xyz/gx/cc: c99
    tea.xyz/gx/make: '*'
    # ^^ often packages need dependencies to build, it is very common for
    # packages to need a C compiler and make, the above provide those
  script: |
    ./configure $ARGS
    make --jobs {{ hw.concurrency }} install
  # it’s extremely common for packages to require the above

provides:
  - bin/foo
  # ^^ specify the binaries or tea magic won’t work

test:
  dependencies:
    foo.com: '*'  # asterisk means “any version, usually the latest”
  script:
    test "$(foo --version)" = {{version}}
  # ^^ we prefer that you test the functionality of the package works, but
  # we know tests are tedious, so will (for now) accept a simple version check
